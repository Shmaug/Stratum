set(CMAKE_CXX_STANDARD 17)

list(APPEND STM_COMPILE_DEFINITIONS STRATUM_VERSION_MAJOR=1 STRATUM_VERSION_MINOR=1 XR_USE_GRAPHICS_API_VULKAN)
if (${ENABLE_DEBUG_LAYERS})
	list(APPEND STM_COMPILE_DEFINITIONS ENABLE_DEBUG_LAYERS)
endif()
if (WIN32)
	list(APPEND STM_COMPILE_DEFINITIONS VK_USE_PLATFORM_WIN32_KHR WINDOWS WIN32_LEAN_AND_MEAN NOMINMAX _CRT_SECURE_NO_WARNINGS)
	if (CMAKE_BUILD_TYPE STREQUAL "Debug" OR CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
		list(APPEND STM_COMPILE_DEFINITIONS _CRTDBG_MAP_ALLOC)
	endif()
endif(WIN32)

function(stm_compile_shaders)
	cmake_parse_arguments(ARG "" "ADD_DEPENDS" "SOURCES" ${ARGN})
	
	file(MAKE_DIRECTORY "bin/Shaders/")
	
	foreach(SRC ${ARG_SOURCES})
	get_filename_component(DST ${SRC} NAME_WE)
	set(DST bin/Shaders/${DST}.stmb)
	
	add_custom_command(
		OUTPUT ${DST}
		MAIN_DEPENDENCY ${SRC}
		DEPENDS ShaderCompiler
		IMPLICIT_DEPENDS c ${SRC}
		COMMAND "${PROJECT_BINARY_DIR}/bin/ShaderCompiler" ${SRC} ${DST} "${STRATUM_DIR}/Shaders")
		
		if (ARG_ADD_DEPENDS)
			add_dependencies(${ARG_ADD_DEPENDS} ${DST})
		endif()

	endforeach()
endfunction()